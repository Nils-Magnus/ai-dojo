- name: Setup Lab Environment
  hosts: lab_servers
  remote_user: azureuser


  tasks:
    # ENVIRONMENT
    - name: Update and upgrade apt
      become: true  # become root, should replace sudo
      apt:
        update_cache: yes
        upgrade: yes

    - name: Install Python
      become: true
      apt:
        name: python3-pip
        state: present
      tags: python

    - name: Install node.js
      block:
      - apt:
          name:
            - apt-transport-https
            - gnupg2

      - apt_key:
          url: https://deb.nodesource.com/gpgkey/nodesource.gpg.key

      - apt_repository:
          repo: "{{ item }}"
          update_cache: yes
        loop:
          - >-
            deb https://deb.nodesource.com/node_19.x
            {{ ansible_distribution_release }} main
          - >-
            deb-src https://deb.nodesource.com/node_19.x
            {{ ansible_distribution_release }} main

      - apt:
          name: nodejs

      become: true
      tags: install_node

    - name: Install Jupyterhub
      block:
      - name: Install configurable-http-proxy
        become: true
        command: "npm install -g configurable-http-proxy"

      - name: Install JupyterHub Python package
        become: true
        command: pip3 install jupyterlab jupyterhub MarkupSafe==2.0.1
        ignore_errors: true
        register: install_jupyterhub
        tags: install_jupyterhub

    # TODO: install Python dependencies

    # - name: Checkout training repository from GitHub
    #   ansible.builtin.git:
    #     repo: "https://github.com/clstaudt/ai-training"
    #     dest: .


    # SETUP SSL
    - name: Setup SSL
      block:
      - name: Install snapd
        become: true
        apt:
          name: snapd
          state: present
      - name: Install certbot
        become: true
        command: snap install --classic certbot
      - name: Symlink certbot
        become: true
        file:
          src: /snap/bin/certbot
          dest: /usr/bin/certbot
          state: link

    # USER MANAGEMENT

    # an ansible task to create n users. The users are named user1, user2, etc. The password is the hashed version of the username.
    - name: Create users
      become: true
      user:
        name: "user{{ item }}"
        password: "{{ 'dojo' |password_hash('sha512') }}"
        groups: sudo, users
        append: yes
      loop: "{{ range(1, n_users|int + 1)|list }}"


    # an ansible task to create a shared directory and make it writable for all users in the group users
    - name: Create shared directory
      become: true
      file:
        path: /home/shared
        state: directory
        owner: root
        group: users
        mode: 0775

    # an ansible task that symlinks the shared directory to the home directory of all users
    - name: Symlink shared directory
      become: true
      file:
        src: /home/shared
        dest: /home/user{{ item }}/shared
        state: link
      loop: "{{ range(1, n_users|int + 1)|list }}"

    # TRAINING MATERIAL

    - name: Checkout training repository from GitHub
      become: true
      ansible.builtin.git:
        repo: "https://github.com/clstaudt/mock-repo"
        dest: /home/user{{ item }}/dojo
      with_sequence: start=1 end={{ n_users }}

    # an ansible task to install the Python requirements from the requirements.txt file in the folder /home/user1/dojo
    - name: Install Python requirements
      become: true
      pip:
        requirements: /home/user{{ item }}/dojo/requirements.txt
        virtualenv: /home/user{{ item }}/dojo/venv
        virtualenv_command: python3 -m venv
      with_sequence: start=1 end={{ n_users }}

    # an ansible task to change the owner of the training material to the user
    - name: Change owner of training material
      become: true
      file:
        path: /home/user{{ item }}/dojo
        owner: user{{ item }}
        group: users
        recurse: yes
      loop: "{{ range(1, n_users|int + 1)|list }}"

      

    # START
    # TODO: probably Ansible is not made for starting processes, so this should go into a script

    # ansible task: start jupyterhub
    # - name: Start certbot 
    #   become: true
    #   shell: certbot certonly --standalone

    # - name: Start JupyterHub
    #   become: true
    #   ansible.builtin.shell: jupyterhub --ip 0.0.0.0 --port 443 --ssl-key {{ ssl_key }} --ssl-cert {{ssl_cert}} 