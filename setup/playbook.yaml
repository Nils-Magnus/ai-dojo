- name: Setup Lab Environment
  hosts: lab_servers
  remote_user: azureuser


  tasks:
    # ENVIRONMENT
    - name: Update and upgrade apt
      become: true  # become root, should replace sudo
      apt:
        update_cache: yes
        upgrade: yes


    - name: Install tmux
      become: true
      apt:
        name: tmux
        state: present


    - name: Install Python
      become: true
      apt:
        name: python3-pip
        state: present
      tags: python

    - name: Install node.js
      block:
      - apt:
          name:
            - apt-transport-https
            - gnupg2

      - apt_key:
          url: https://deb.nodesource.com/gpgkey/nodesource.gpg.key

      - apt_repository:
          repo: "{{ item }}"
          update_cache: yes
        loop:
          - >-
            deb https://deb.nodesource.com/node_19.x
            {{ ansible_distribution_release }} main
          - >-
            deb-src https://deb.nodesource.com/node_19.x
            {{ ansible_distribution_release }} main

      - apt:
          name: nodejs

      become: true
      tags: install_node

    - name: Install Jupyterhub
      block:
      - name: Install configurable-http-proxy
        become: true
        command: "npm install -g configurable-http-proxy"

      - name: Install JupyterHub Python package
        become: true
        command: pip3 install jupyterlab jupyterhub MarkupSafe==2.0.1
        ignore_errors: true
        register: install_jupyterhub
        tags: install_jupyterhub


    # SETUP SSL
    - name: Setup SSL
      block:
      - name: Install snapd
        become: true
        apt:
          name: snapd
          state: present
      - name: Install certbot
        become: true
        command: snap install --classic certbot
      - name: Symlink certbot
        become: true
        file:
          src: /snap/bin/certbot
          dest: /usr/bin/certbot
          state: link

    # USER MANAGEMENT

    - name: Create users
      become: true
      user:
        name: "user{{ item }}"
        password: "{{ user_password |password_hash('sha512') }}"
        groups: sudo, users
        append: yes
      loop: "{{ range(1, n_users|int + 1)|list }}"

    - name: Create trainers
      become: true
      user:
        name: "trainer{{ item }}"
        password: "{{ trainer_password |password_hash('sha512') }}"
        groups: sudo, users
        append: yes
      loop: "{{ range(1, n_trainers|int + 1)|list }}"

    - name: Create shared directory
      become: true
      file:
        path: /home/shared
        state: directory
        owner: root
        group: users
        mode: 0775

    - name: Symlink shared directory
      become: true
      file:
        src: /home/shared
        dest: /home/user{{ item }}/shared
        state: link
      loop: "{{ range(1, n_users|int + 1)|list }}"

    - name: Symlink shared directory for trainers
      become: true
      file:
        src: /home/shared
        dest: /home/trainer{{ item }}/shared
        state: link
      loop: "{{ range(1, n_trainers|int + 1)|list }}"

    - name: Configure git
      become: true
      command: git config --global --add safe.directory '*'

    - name: Checkout training repository from GitHub
      become: true
      ansible.builtin.git:
        repo: "https://github.com/clstaudt/ai-dojo"
        dest: /home/user{{ item }}/dojo
        force: yes
      with_sequence: start=1 end={{ n_users }}


    - name: Checkout training repository for trainers
      become: true
      ansible.builtin.git:
        repo: "https://github.com/clstaudt/ai-dojo"
        dest: /home/trainer{{ item }}/dojo
        force: yes
      with_sequence: start=1 end={{ n_trainers }}

    - name: Change owner of training material
      become: true
      file:
        path: /home/user{{ item }}/dojo
        owner: user{{ item }}
        group: users
        recurse: yes
      loop: "{{ range(1, n_users|int + 1)|list }}"

    - name: Change owner of training material for trainers
      become: true
      file:
        path: /home/trainer{{ item }}/dojo
        owner: trainer{{ item }}
        group: users
        recurse: yes
      loop: "{{ range(1, n_trainers|int + 1)|list }}"


    - name: Install Python requirements
      become: true
      pip:
        requirements: /home/trainer1/dojo/requirements.txt


    - name: Install Python module
      become: true
      pip:
        name: /home/trainer1/dojo/library
        editable: yes


    ## SSL CERTIFICATE
    - name: Create directory for SSL certificate
      become: true
      file:
        path: /etc/letsencrypt/live/{{ domain_name }}
        state: directory
        owner: root
        group: root
        mode: 0644


    - name: Copy SSL certificate
      become: true
      copy:
        src: "{{ ssl_dir }}/{{ item }}"
        dest: /etc/letsencrypt/live/{{ domain_name }}/{{ item }}
        owner: root
        group: root
        mode: 0644
      loop:
        - cert.pem
        - chain.pem
        - fullchain.pem
        - privkey.pem
        - README

